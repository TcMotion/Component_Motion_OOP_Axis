<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="LabelingExample" Id="{27201e5b-e415-402a-9af7-babb81bde0ad}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM LabelingExample
VAR
	/// Hardware definitions
	LabelDrive: Axis;
	Conveyor: Axis;
	LabelLength: REAL := 100;
	SensorDistance: REAL := 10;
	Velocity: REAL := 5;
	ProductDetection: BOOL := FALSE;
	DelayTimer: TON;
	/// States
	ConveyorState: INT := 0;
	LabelDriveState: INT := 0;
	/// Control
	Start: BOOL := FALSE;
	/// Commands
	ConveyorMove: itfCommand;
	LabelDriveMove: itfCommand;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Run the timer. As it is a classic FB it should be called every cycle
DelayTimer(IN:=ProductDetection, PT:= INT_TO_TIME(REAL_TO_INT(SensorDistance * 1000 / Velocity)));

CASE ConveyorState OF
	0: // Disabled
		IF Start THEN
			ConveyorState := ConveyorState + 1;
		END_IF
		
	1: // Power On
		Conveyor.Power(Enable:=TRUE, EnablePositive:=TRUE, EnableNegative:=TRUE);
		IF Conveyor.Status = AXIS_STATUS.Standstill THEN
			ConveyorState := ConveyorState + 1;
		END_IF
		
	2: // Wait for LabelDrive 
		IF LabelDrive.Status = AXIS_STATUS.Standstill THEN
			ConveyorMove := Conveyor.MoveVelocity(Velocity:=Velocity, Acceleration:=0, Deceleration:=0, Jerk:=0, Direction:=MC_Direction.mcPositiveDirection, BufferMode:=MC_BUFFER_MODE.mcAborting);
			ConveyorState := ConveyorState + 1;
		END_IF
		
	3: // Moving
		IF NOT Start THEN
			ConveyorMove := Conveyor.Halt(Deceleration:=0, Jerk:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
			ConveyorState := ConveyorState + 1;
		END_IF
		
	4: // Stopping
		IF ConveyorMove.Done THEN
			ConveyorState := ConveyorState + 1;
		END_IF
		
	5: // Power off
		Conveyor.Power(Enable:=FALSE, EnablePositive:=FALSE, EnableNegative:=FALSE);
		IF Conveyor.Status = AXIS_STATUS.Disabled THEN
			ConveyorState := 0;
		END_IF
END_CASE

CASE LabelDriveState OF
	0: // Disabled
		IF Start THEN
			LabelDriveState := LabelDriveState + 1;
		END_IF
		
	1: // Power On
		LabelDrive.Power(Enable:=TRUE, EnablePositive:=TRUE, EnableNegative:=TRUE);
		IF LabelDrive.Status = AXIS_STATUS.Standstill THEN
			LabelDriveState := LabelDriveState + 1;
		END_IF
		
	2: // Wait for Conveyor 
		IF Conveyor.Status = AXIS_STATUS.Standstill THEN
			LabelDriveState := LabelDriveState + 1;
		END_IF
		
	3: // Wait for product
		IF NOT Start THEN
			LabelDriveState := 5;
		END_IF
		IF DelayTimer.Q THEN
			LabelDriveMove := LabelDrive.MoveRelative(Distance:=LabelLength, Velocity:=Velocity, Acceleration:=0, Deceleration:=0, Jerk:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
			LabelDriveState := LabelDriveState + 1;
		END_IF
		
	4: // Wait for label to be transfered
		IF LabelDriveMove.Done AND NOT DelayTimer.Q THEN
			LabelDriveState := 3;
		END_IF
		
	5: // Power off
		Conveyor.Power(Enable:=FALSE, EnablePositive:=FALSE, EnableNegative:=FALSE);
		IF Conveyor.Status = AXIS_STATUS.Disabled THEN
			LabelDriveState := 0;
		END_IF
	
END_CASE
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>