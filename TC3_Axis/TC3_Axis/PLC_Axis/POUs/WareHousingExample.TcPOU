<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="WareHousingExample" Id="{0e6956dd-ffba-455e-80e5-cadd31dc7a91}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM WareHousingExample
VAR
//		Axis_X : itfAxis;
//		Axis_Y : itfAxis;
//		Axis_Z : itfAxis;
//		stateOOP : INT;
//		lastCommandX : itfCommand;
//		lastCommandY : itfCommand;
//		lastCommandZ : itfCommand;
//		stepOn : BOOL := FALSE;
//		targetPosX : REAL := 400;
//		targetPosY : REAL := 600;

		Axis_X : TcAxis;
		Axis_Y : TcAxis;
		Axis_Z : TcAxis;
		stateOOP : INT;
		lastCommandX : itfCommand;
		lastCommandY : itfCommand;
		lastCommandZ : itfCommand;
		stepOn : BOOL := FALSE;
		targetPosX : REAL := 400;
		targetPosY : REAL := 600;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE stateOOP OF
	0: ;
	10: 
	// init
		Axis_X.Power(Enable:=TRUE, EnablePositive:=TRUE, EnableNegative:=TRUE);
		Axis_Y.Power(Enable:=TRUE, EnablePositive:=TRUE, EnableNegative:=TRUE);
		Axis_Z.Power(Enable:=TRUE, EnablePositive:=TRUE, EnableNegative:=TRUE);
	
		IF stepOn THEN
			stateOOP := stateOOP + 10;
		END_IF
	20:
	// start movement in XY
		lastCommandX := Axis_X.MoveAbsolute(Position:=targetPosX, Velocity:=40, Acceleration:=0, Deceleration:=0, Jerk:=0, Direction:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
		lastCommandY := Axis_Y.MoveAbsolute(Position:=targetPosY, Velocity:=40, Acceleration:=0, Deceleration:=0, Jerk:=0, Direction:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
		stateOOP := stateOOP + 10;
	30:
	// wait till movement is finished to 'forkIn'
		IF lastCommandX.Done AND lastCommandY.Done THEN
			lastCommandZ := Axis_Z.MoveRelative(Distance:=100, Velocity:=20, Acceleration:=0, Deceleration:=0, Jerk:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
			stateOOP := stateOOP + 10;
		END_IF
	40:
	// lift pallet if forked in
		IF lastCommandZ.Done THEN
			lastCommandY := Axis_Y.MoveRelative(Distance:=100, Velocity:=10, Acceleration:=0, Deceleration:=0, Jerk:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
			stateOOP := stateOOP + 10;
		END_IF
	50:
	// fork out with pallet if forked in is done
		IF lastCommandY.Done THEN
			lastCommandZ := Axis_Z.MoveAbsolute(Position:=0, Velocity:=20, Acceleration:=0, Deceleration:=0, Jerk:=0, Direction:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
			stateOOP := stateOOP + 10;
		END_IF
	60:
	// move to delivery if fork out is done
		IF lastCommandZ.Done THEN
			lastCommandX := Axis_X.MoveAbsolute(Position:=0, Velocity:=40, Acceleration:=0, Deceleration:=0, Jerk:=0, Direction:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
			lastCommandY := Axis_Y.MoveAbsolute(Position:=0, Velocity:=40, Acceleration:=0, Deceleration:=0, Jerk:=0, Direction:=0, BufferMode:=MC_BUFFER_MODE.mcAborting);
			stateOOP := stateOOP + 10;
		END_IF
	70:
	// wait till finished
		IF lastCommandX.Done AND lastCommandY.Done THEN
			stateOOP := stateOOP + 10;
		END_IF
	80: 
	// ready
	;
END_CASE]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>