<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="TcAxis_Tc2_MC2" Id="{ede46f14-de41-4cbf-bc63-b5cbbe198a41}" SpecialFunc="None">
    <Declaration><![CDATA[//FUNCTION_BLOCK TcAxis_Tc2_MC2 EXTENDS TcAxis_Base IMPLEMENTS itfAxis_Tc2_MC2
//FUNCTION_BLOCK TcAxis_Tc2_MC2 EXTENDS TcAxis_DMC_Tc3_Direct_Motion_Control IMPLEMENTS itfAxis_Tc2_MC2
FUNCTION_BLOCK TcAxis_Tc2_MC2 IMPLEMENTS itfAxis_Tc2_MC2
//FUNCTION_BLOCK TcAxis_Tc2_MC2 EXTENDS TcAxis_Base IMPLEMENTS itfAxis_Tc3_DriveMotionControl, itfAxis_Tc2_MC2

VAR_INPUT
	Axis 				: REFERENCE TO Tc2_MC2.AXIS_REF;
END_VAR
//VAR_OUTPUT
//END_VAR
//VAR_IN_OUT 
//	Axis 				: Tc2_MC2.AXIS_REF;
//END_VAR
VAR	
	_PowerOn : BOOL;
//	itfCommand      : itfCommand;

//	_fbCommand       	: TcCommand;
	
	_fbAxisCommand   	: TcAxisCommand;

//itfAxisCommand  : itfAxisCommand;
//_Command         : ST_Command;
	

//MC : ST_Tc2_MC2;	

count_delete : INT;	
//	ACT_Cyclic_Update: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ACT_Cyclic_Update();
 ]]></ST>
    </Implementation>
    <Folder Name="[Internal]" Id="{00c423f8-b718-450b-90f8-c0bb367d276f}">
      <Folder Name="Beta Functions Blocks" Id="{b43320bb-582a-4be0-94a8-8c736ed6f9ad}">
        <Folder Name="Position Correction" Id="{3a966d93-da76-4ab9-916f-0a2ee7c92a8e}" />
        <Folder Name="Sinus Motion" Id="{07d5e521-7775-48c5-807a-a00072b0ff9d}" />
      </Folder>
    </Folder>
    <Folder Name="Administrative" Id="{846cf884-e007-491c-9e2c-42e0fb572616}">
      <Folder Name="Axis Functions" Id="{f97f4d08-ef02-4277-a5a9-940fcbeb16ba}" />
      <Folder Name="Extensions" Id="{776de8b6-2376-4dd5-b84d-f6fcceba39c7}">
        <Folder Name="DriveOperationMode" Id="{8f53d975-1a8e-4711-93ba-cea61f2e47db}" />
      </Folder>
      <Folder Name="External Set Point Generator" Id="{9a00ee3c-ba57-4bda-8b8d-585d903b2668}" />
      <Folder Name="Status and Parameter" Id="{93a75216-5535-4e29-a765-2097ee9bd048}" />
      <Folder Name="Touch Probe" Id="{a5f81912-eef1-4913-a787-44651389cb63}" />
    </Folder>
    <Folder Name="FeedBack" Id="{1a660d81-33e9-4cb9-b03a-13d277bb9b98}" />
    <Folder Name="Motion" Id="{d2832646-43db-4ae9-81e0-102356ac94c8}">
      <Folder Name="Gearing" Id="{3bb9bb54-a986-458c-8f69-3b224397b873}" />
      <Folder Name="Homing" Id="{dc24918e-a0ae-450d-adf7-2c67cabb6402}" />
      <Folder Name="Manual Motion" Id="{920cbf61-84af-465e-9a86-5463c5ef40c6}" />
      <Folder Name="Phasing" Id="{bb2f98b6-726f-4497-a39c-019a14562f1d}" />
      <Folder Name="Point To Point Motion" Id="{db0b241d-dfad-4df8-9d9e-a3bb1a16c149}" />
      <Folder Name="Superposition" Id="{f814806c-aeb2-4962-9763-de1575556462}" />
      <Folder Name="Torque Control" Id="{1e25a18a-168c-444e-a28b-4bbd0ccb6cf8}" />
    </Folder>
    <Folder Name="Status" Id="{03058b18-c49a-4761-8ec3-e8bf4e5aa1d1}" />
    <Method Name="AbortSuperposition" Id="{a43edade-073a-41af-bb29-31239da69db7}" FolderPath="Motion\Superposition\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD AbortSuperposition : itfAxisCommand
VAR_INPUT
	Distance			: REAL;
	VelocityDiff		: REAL;
	Acceleration		: REAL;
	Deceleration		: REAL;
	Jerk				: REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="AbortTrigger" Id="{7e7b714c-aa2c-4a74-95f0-6833e466216b}" FolderPath="Administrative\Touch Probe\">
      <Declaration><![CDATA[METHOD AbortTrigger : itfCommand
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Action Name="ACT_Cyclic_Update" Id="{ea69ea2f-5184-4bb2-95c7-ef9b972f91f7}">
      <Implementation>
        <ST><![CDATA[Read_Status();]]></ST>
      </Implementation>
    </Action>
    <Property Name="ActualAcceleration" Id="{16687151-6395-4102-b955-93a32114a2a5}" FolderPath="FeedBack\">
      <Declaration><![CDATA[PROPERTY ActualAcceleration : LREAL]]></Declaration>
      <Get Name="Get" Id="{9b3f679c-9c5d-4462-be76-6d20b250a46e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ActualAcceleration := Axis.NcToPlc.ActAcc;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ActualPosition" Id="{b2230e07-cc2f-43f9-96fa-b3df5126c4b7}" FolderPath="FeedBack\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY ActualPosition : REAL
]]></Declaration>
      <Get Name="Get" Id="{263c22f1-18b5-4f5f-aaf7-577af67fd31c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[//Actual Position
//IF Axis.Status.OpMode.Modulo THEN
//    ActualPosition := Axis.NcToPlc.ModuloActPos;
//ELSE
    ActualPosition := Axis.NcToPlc.ActPos;
//END_IF

count_delete  := count_delete + 1;

]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ActualPositionModulo" Id="{2693ca0a-7a4c-4b11-8b1d-234422bbc67c}" FolderPath="FeedBack\">
      <Declaration><![CDATA[PROPERTY ActualPositionModulo : LREAL]]></Declaration>
      <Get Name="Get" Id="{b90f42e6-edba-47bd-a4c9-d2f0ccb20099}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ActualPositionModulo := Axis.NcToPlc.ModuloActPos;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ActualTorque" Id="{47f1f1a8-2481-48da-95ea-96476db64d77}" FolderPath="FeedBack\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY ActualTorque : LREAL
]]></Declaration>
      <Get Name="Get" Id="{d6e8535c-3af3-4c34-9d6d-c19c9f0a01f9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ActualTorque := Axis.NcToPlc.ActTorque;

count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ActualVelocity" Id="{e88b58fe-48b9-430f-bfde-dfb33c3bd932}" FolderPath="FeedBack\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY ActualVelocity : LREAL
]]></Declaration>
      <Get Name="Get" Id="{7dc6c552-9454-4328-bbea-4a267ff83920}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[//Actual Velocity
ActualVelocity := Axis.NcToPlc.ActVelo;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="AxisWarning" Id="{9681de72-c409-4b72-b04e-79507da56814}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY AxisWarning : BOOL
]]></Declaration>
      <Get Name="Get" Id="{c6dd67f0-6fed-44ce-93f1-e538fdf76ea4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="BacklashCompensation" Id="{470c9e20-21c5-4677-917e-c0f1a9310f79}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD BacklashCompensation : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="CommunicationReady" Id="{8590d5ed-42e3-4ce6-b3e6-b01dc7d93a0c}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY CommunicationReady : BOOL
]]></Declaration>
      <Get Name="Get" Id="{02038667-914b-4c42-be19-d587813289b9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Direction" Id="{aa7ab63a-8922-49c4-8310-24f5a4f0c70a}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY Direction : AXIS_DIRECTION
]]></Declaration>
      <Get Name="Get" Id="{c552097b-2c34-4812-8ba6-f4c7cdf8fa48}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{73f39bd4-ba95-46df-a05d-3fbd114dc241}" FolderPath="Status\">
      <Declaration><![CDATA[PROPERTY Error : BOOL]]></Declaration>
      <Get Name="Get" Id="{10691733-5fe1-4205-8dc2-ea19fc1c63cd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error :=  Axis.Status.Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ErrorId" Id="{f6537c7d-f19e-43d1-9730-38ba00377bec}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY ErrorId : WORD
]]></Declaration>
      <Get Name="Get" Id="{3bd1eb7c-f586-4717-bdce-f7ce6a124431}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[
//ErrorId := Axis.Status.ErrorID;

count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ErrorId_Udint_Status" Id="{d1af9492-b775-4c4c-9c2e-e16f7984c79e}" FolderPath="Status\">
      <Declaration><![CDATA[PROPERTY ErrorId_Udint_Status : UDINT]]></Declaration>
      <Get Name="Get" Id="{b143cfd2-79d5-493b-8a6d-901da710f66c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ErrorId_Udint_Status := Axis.Status.ErrorID;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ExtSetPointGenDisable" Id="{754e604c-a00b-417b-8ae6-8bfda8964e7f}" FolderPath="Administrative\External Set Point Generator\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ExtSetPointGenDisable : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExtSetPointGenEnable" Id="{06409a70-74e9-4bcd-8785-01fda000e417}" FolderPath="Administrative\External Set Point Generator\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ExtSetPointGenEnable : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="Geared" Id="{cad8364b-d06c-481a-9940-549f97d5ccbb}" FolderPath="Status\">
      <Declaration><![CDATA[PROPERTY Geared : BOOL]]></Declaration>
      <Get Name="Get" Id="{a3b3f0fb-2772-49f7-8dbb-75c9f3fa0511}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Geared :=  Axis.Status.Coupled;
//Axis.NcToPlc.CoupleState
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="GearIn" Id="{6cbcc261-b3fb-4547-98ae-75e372afb64e}" FolderPath="Motion\Gearing\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD GearIn 			: itfSynchronizedAxisCommand
VAR_INPUT
	RatioNumerator		: LREAL;
	RatioDenominator	: UINT;
	Acceleration		: LREAL;
	Deceleration		: LREAL;
	Jerk				: LREAL;
//	BufferMode			: Tc2_MC2.MC_BufferMode; //Currently not implemented
//	Options             : Tc2_MC2.ST_GearInOptions; //Currently not implemented
END_VAR
VAR_IN_OUT 
	Slave				: Tc2_MC2.AXIS_REF;	
END_VAR
VAR_INST
	_MC_GearIn 			: Tc2_MC2.MC_GearIn;	
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[	
_MC_GearIn(
	Master:= Axis, 
	Slave:= Slave, 
	Execute:= TRUE, 
	RatioNumerator:= RatioNumerator, 
	RatioDenominator:= RatioDenominator, 
	Acceleration:= Acceleration,
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	BufferMode:= , //BufferMode,
	Options:= , //Options, 
	InGear=> ,//Geared , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );
	
_MC_GearIn(
	Master:= Axis, 
	Slave:= Slave, 
	Execute:= FALSE);
	
count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="GearInDyn" Id="{34f00123-93c7-4112-97a2-6bdb32b75f1f}" FolderPath="Motion\Gearing\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD GearInDyn 		: itfSynchronizedAxisCommand
VAR_INPUT
    GearRatio			: LREAL;
	Acceleration		: REAL;
	Deceleration		: REAL;
	Jerk				: REAL;
//	BufferMode			: Tc2_MC2.MC_BufferMode;
//	Options             : Tc2_MC2.ST_GearInDynOptions;
END_VAR

VAR_IN_OUT 
	Slave				: Tc2_MC2.AXIS_REF;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="GearInMultimaster" Id="{e4118677-a979-4510-8b94-478ec510771a}" FolderPath="Motion\Gearing\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD GearInMultimaster 	: itfSynchronizedAxisCommand
VAR_INPUT
	GearRatio1				: LREAL;
	GearRatio2				: LREAL;
	GearRatio3				: LREAL;	
	GearRatio4				: LREAL;	
	Acceleration			: LREAL;
	Deceleration			: LREAL;
	Jerk					: LREAL;
	BufferMode				: Tc2_MC2.MC_BufferMode;
	Options             	: Tc2_MC2.ST_GearInMultiMasterOptions;	
END_VAR

VAR_IN_OUT
	Master1					: Tc2_MC2.AXIS_REF;	
	Master2					: Tc2_MC2.AXIS_REF;	
	Master3					: Tc2_MC2.AXIS_REF;	
	Master4					: Tc2_MC2.AXIS_REF;	
	Slave					: Tc2_MC2.AXIS_REF;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="GearOut" Id="{b80af787-0897-496c-b2c3-680f811a2c90}" FolderPath="Motion\Gearing\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD GearOut 			: itfSynchronizedAxisCommand
VAR_INPUT
	Options             : Tc2_MC2.ST_GearInDynOptions;
END_VAR

VAR_IN_OUT 
	Slave				: Tc2_MC2.AXIS_REF;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Halt" Id="{b5e61c76-4253-4650-9c4d-72d7a3b44126}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD Halt 		: itfAxisCommand
VAR_INPUT
	Deceleration	: REAL;
	Jerk			: REAL;
	BufferMode		: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_Halt		: Tc2_MC2.MC_HALT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_Halt(
	Axis:= Axis, 
	Execute:= TRUE, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	BufferMode:= , //BufferMode, 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="HaltPhasing" Id="{3f071661-fe7c-456d-883e-c3cce9986bf1}" FolderPath="Motion\Phasing\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD HaltPhasing : itfSynchronizedAxisCommand
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Home" Id="{af023316-0daa-480a-9620-216f87d5a5f0}" FolderPath="Motion\Homing\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Home 		: itfAxisCommand
VAR_INPUT
	Position		: REAL;
	Velocity		: REAL;
	EndVelocity		: REAL;
	Acceleration	: REAL;
	Deceleration	: REAL;
	Jerk			: REAL;
	Direction		: MC_Direction;
	HomingMode		: INT;
	BufferMode		: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_Home		: Tc2_MC2.MC_HOME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_Home(
	Axis:= Axis, 
	Execute:= TRUE, 
	Position:= Position, 
	HomingMode:= HomingMode, 
	BufferMode:= ,//BufferMode , 
	Options:= , 
	bCalibrationCam:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Property Name="HomeAbsSwitch" Id="{11667e14-831c-4aef-9a5a-39ccba0528ec}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY HomeAbsSwitch : BOOL
]]></Declaration>
      <Get Name="Get" Id="{832ad001-4747-41e7-a8b4-939cb85c1540}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="IsHomed" Id="{c73206de-8ef9-4ef0-a314-f9781e86939a}" FolderPath="Status\">
      <Declaration><![CDATA[
PROPERTY IsHomed : BOOL
]]></Declaration>
      <Get Name="Get" Id="{7ad0df17-5302-4856-973c-eae74fba749a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[
IsHomed := Axis.Status.Homed;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Jog" Id="{b217b8a0-5ed3-4962-b3d8-ab876323bb77}" FolderPath="Motion\Manual Motion\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Jog 			: itfAxisCommand
VAR_INPUT
    JogForward 		: BOOL;
    JogBackwards 	: BOOL;
    Mode     		: Tc2_MC2.E_JogMode;
    Position        : LREAL;
    Velocity        : LREAL;
    Acceleration 	: LREAL;
    Deceleration 	: LREAL;
    Jerk     		: LREAL;
END_VAR
VAR_INST
	_MC_Jog			: Tc2_MC2.MC_JOG;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_Jog(
	Axis:= Axis, 
	JogForward:= JogForward, 
	JogBackwards:= JogBackwards, 
	Mode:= Mode, 
	Position:= Position, 
	Velocity:= Velocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );


count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Property Name="LimitSwitchNegative" Id="{07b013c4-fa8c-4e4e-b880-b99a700f2294}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY LimitSwitchNegative : BOOL
]]></Declaration>
      <Get Name="Get" Id="{d7d494ad-a8d7-456e-bd2e-97fc8f5da81e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[
LimitSwitchNegative := Axis.Status.SoftLimitMinExceeded;

count_delete  := count_delete + 1;

]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="LimitSwitchPositive" Id="{8f9e18ea-d405-4e05-86dd-8e0e6b996cd8}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY LimitSwitchPositive : BOOL
]]></Declaration>
      <Get Name="Get" Id="{ed0f687e-30b9-4b4e-9a95-1745cbb04882}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[
LimitSwitchPositive := Axis.Status.SoftLimitMaxExceeded;

count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MotionStatus" Id="{13fa6222-30dd-4861-963e-f23a6aee8455}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY MotionStatus : MOTION_STATUS
]]></Declaration>
      <Get Name="Get" Id="{0b5c4fb5-9547-4781-99c0-311b7cf4ea1e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MoveAbsolute" Id="{75c5779f-04ff-4069-95d9-d7a1de4e344e}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD MoveAbsolute 	: itfAxisCommand
VAR_INPUT
	Position			: LREAL;
	Velocity			: LREAL;
	Acceleration		: LREAL;
	Deceleration		: LREAL;
	Jerk				: LREAL;
	BufferMode			: MC_BUFFER_MODE;
	Options         	: Tc2_Mc2.ST_MoveOptions;
END_VAR
VAR
	itfAxisCommand   	: itfAxisCommand;
    _Command         	: ST_Command;
END_VAR	
VAR_INST
	_MC_MoveAbsolute 	: Tc2_MC2.MC_MoveAbsolute;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[itfAxisCommand := _fbAxisCommand;
	
//MC.MoveAbsolute(
//	Axis:= Axis, 
//	Execute:= TRUE ,//Execute, //
//	Position:= Position, 
//	Velocity:= Velocity, 
//	Acceleration:= Acceleration, 
//	Deceleration:= Deceleration, 
//	Jerk:= Jerk, 
//	BufferMode:= BufferMode,//BufferMode, 
//	Options:= Options, //Options, 
//	Done=> _Command.Done, 
//	Busy=> _Command.Busy, 
//	Active=>_Command.Active, 
//	CommandAborted=> _Command.CommandAborted, 
//	Error=> _Command.Error, 
//	ErrorID=> _Command.ErrorID_Udint);
	
_MC_MoveAbsolute(
	Axis:= Axis, 
	Execute:= TRUE ,//Execute, //
	Position:= Position, 
	Velocity:= Velocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	BufferMode:= BufferMode,//BufferMode, 
	Options:= Options, //Options, 
	Done=> _Command.Done, 
	Busy=> _Command.Busy, 
	Active=>_Command.Active, 
	CommandAborted=> _Command.CommandAborted, 
	Error=> _Command.Error, 
	ErrorID=> _Command.ErrorID_Udint);	
	
//MC.MoveAbsolute(
//	Axis:= Axis, 
//	Execute:= FALSE);	
	
_MC_MoveAbsolute(
	Axis:= Axis, 
	Execute:= FALSE);	
	

itfAxisCommand.Done 				:=  _Command.Done AND ActualPosition = Position;             
itfAxisCommand.Busy   				:=	_Command.Busy;
itfAxisCommand.Active 				:=	_Command.Active;
itfAxisCommand.CommandAborted		:=	_Command.CommandAborted;
itfAxisCommand.Error 				:=	_Command.Error;
itfAxisCommand.ErrorID_Udint 		:=	_Command.ErrorID_Udint;

MoveAbsolute := itfAxisCommand;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveAdditive" Id="{41ab44ec-7746-4f1c-885f-94c8dd766d4e}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD MoveAdditive 	: itfAxisCommand
VAR_INPUT
	Distance			: REAL;
	Velocity			: REAL;
	Acceleration		: REAL;
	Deceleration		: REAL;
	Jerk				: REAL;
	BufferMode			: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_MoveAdditive	: Tc2_MC2.MC_MoveAdditive;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_MoveAdditive(
	Axis:= Axis, 
	Execute:= TRUE, 
	Distance:= Distance, 
	Velocity:= Velocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	BufferMode:= , //BufferMode, 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );


count_delete  := count_delete + 1;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveContinuousAbsolute" Id="{33e3848e-94a8-499f-bd0e-8a5c066a1f3c}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD MoveContinuousAbsolute 	: itfContinuousAxisCommand
VAR_INPUT
	Position					: REAL;
	EndVelocity					: REAL;
	Velocity					: REAL;
	Acceleration				: REAL;
	Deceleration				: REAL;
	Jerk						: REAL;
	Direction					: MC_DIRECTION;
	BufferMode					: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_MoveContinuousAbsolute 	: Tc2_MC2.MC_MoveContinuousAbsolute;		
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_MoveContinuousAbsolute(
	Axis:= Axis, 
	Execute:= TRUE, 
	Position:= Position, 
	Velocity:= Velocity, 
	EndVelocity:= EndVelocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	BufferMode:= ,//BufferMode, 
	Options:= , 
	InEndVelocity=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );


count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveContinuousRelative" Id="{bcd4836b-509a-4705-81e4-3c0e0c808801}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD MoveContinuousRelative 	: itfContinuousAxisCommand
VAR_INPUT
	Distance					: REAL;
	EndVelocity					: REAL;
	Velocity					: REAL;
	Acceleration				: REAL;
	Deceleration				: REAL;
	Jerk						: REAL;
	Direction					: MC_DIRECTION;
	BufferMode					: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_MoveContinuousRelative 	: Tc2_MC2.MC_MoveContinuousRelative;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_MoveContinuousRelative(
	Axis:= Axis, 
	Execute:= TRUE, 
	Distance:= Distance, 
	Velocity:= Velocity, 
	EndVelocity:= EndVelocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	BufferMode:= ,//BufferMode, 
	Options:= , 
	InEndVelocity=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );



count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveModulo" Id="{e498b0d0-5eab-4e87-b643-9fc1e9a96f1d}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[METHOD MoveModulo : itfAxisCommand
VAR_INPUT
END_VAR
VAR_INST
	_MC_MoveModulo 	: Tc2_MC2.MC_MoveModulo;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_MoveModulo(
	Axis:= Axis, 
	Execute:= TRUE, 
	Position:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	Direction:= , 
	BufferMode:= , 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveRelative" Id="{fddf74c6-fdb2-4e7c-a07f-3af72833d590}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD MoveRelative 	: itfAxisCommand
VAR_INPUT
	Distance			: REAL;
	Velocity			: REAL;
	Acceleration		: REAL;
	Deceleration		: REAL;
	Jerk				: REAL;
	BufferMode			: MC_BUFFER_MODE;
	Options         	: TC2_MC2.ST_MoveOptions;
END_VAR
VAR
	itfAxisCommand   : itfAxisCommand;
	_Command         : ST_Command;
END_VAR
VAR_INST
	_MC_MoveRelative 	: Tc2_MC2.MC_MoveRelative;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[itfAxisCommand := _fbAxisCommand;

//MC.MoveRelative(
//	Axis:= Axis, 
//	Execute:= TRUE, 
//	Distance:= Distance, 
//	Velocity:= Velocity, 
//	Acceleration:= Acceleration, 
//	Deceleration:= Deceleration, 
//	Jerk:= Jerk, 
//	BufferMode:= ,//BufferMode, 
//	Options:= Options, 
//	Done=> _Command.Done, 
//	Busy=> _Command.Busy, 
//	Active=> _Command.Active, 
//	CommandAborted=> _Command.CommandAborted, 
//	Error=> _Command.Error, 
//	ErrorID=> _Command.ErrorID_Udint);
	
_MC_MoveRelative(
	Axis:= Axis, 
	Execute:= TRUE, 
	Distance:= Distance, 
	Velocity:= Velocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	BufferMode:= ,//BufferMode, 
	Options:= Options, 
	Done=> _Command.Done, 
	Busy=> _Command.Busy, 
	Active=> _Command.Active, 
	CommandAborted=> _Command.CommandAborted, 
	Error=> _Command.Error, 
	ErrorID=> _Command.ErrorID_Udint);	
	
//MC.MoveRelative(
//	Axis:= Axis, 
//	Execute:= FALSE);	

_MC_MoveRelative(
	Axis:= Axis, 
	Execute:= FALSE);		
	
itfAxisCommand.Done 				:=  _Command.Done; //AND ActualPosition = ActualPosition + Distance;             
itfAxisCommand.Busy   				:=	_Command.Busy;
itfAxisCommand.Active 				:=	_Command.Active;
itfAxisCommand.CommandAborted		:=	_Command.CommandAborted;
itfAxisCommand.Error 				:=	_Command.Error;
itfAxisCommand.ErrorID_Udint 		:=	_Command.ErrorID_Udint;

MoveRelative := itfAxisCommand;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveSuperimposed" Id="{64695090-d2ac-4903-bbe7-a60c98f2edf6}" FolderPath="Motion\Superposition\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD MoveSuperimposed 	: itfAxisCommand
VAR_INPUT
	Distance				: REAL;
	VelocityDiff			: REAL;
	Acceleration			: REAL;
	Deceleration			: REAL;
	Jerk					: REAL;
END_VAR
VAR_INST
	_MC_MoveSuperimposed	 	: Tc2_MC2.MC_MoveSuperimposed;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_MoveSuperimposed(
	Axis:= Axis, 
	Execute:= TRUE, 
	Mode:= , 
	Distance:= , 
	VelocityDiff:= VelocityDiff, 
	Acceleration:= Acceleration, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	VelocityProcess:= , 
	Length:= , 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> , 
	Warning=> , 
	WarningId=> , 
	ActualVelocityDiff=> , 
	ActualDistance=> , 
	ActualLength=> , 
	ActualAcceleration=> , 
	ActualDeceleration=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveVelocity" Id="{c0d6a530-ab89-47b6-a229-25b41e577faa}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD MoveVelocity 	: itfContinuousAxisCommand
VAR_INPUT
	Velocity			: REAL;
	Acceleration		: REAL;
	Deceleration		: REAL;
	Jerk				: REAL;
	Direction			: MC_Direction;
	BufferMode			: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_MoveVelocity	: Tc2_MC2.MC_MoveVelocity;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_MoveVelocity(
	Axis:= Axis, 
	Execute:= TRUE, 
	Velocity:= Velocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	Direction:= Direction, 
	BufferMode:= , //BufferMode
	Options:= , 
	InVelocity=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );	

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OverrideFilter" Id="{64a2874d-cd59-46bd-8162-94b54e29223e}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD OverrideFilter : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="PhasingAbsolute" Id="{6636a02f-2e18-4d37-a884-ab23bb4c93d0}" FolderPath="Motion\Phasing\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD PhasingAbsolute 	: itfSynchronizedAxisCommand
VAR_INPUT
//	Master				: itfAxis;
	Master				: Tc2_MC2.AXIS_REF;
	Slave				: Tc2_MC2.AXIS_REF;		
	PhaseShift			: REAL;
	Velocity			: REAL;
	Acceleration		: REAL;
	Deceleration		: REAL;
	Jerk				: REAL;
	BufferMode			: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_PhasingAbsolute	: Tc2_MC2.MC_PhasingAbsolute;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_PhasingAbsolute(
	Master:= Master, 
	Slave:= Slave, 
	Execute:= TRUE, 
	ContinuousUpdate:= , 
	PhaseShift:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> , 
	AbsolutePhaseShift=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="PhasingRelative" Id="{7ec8289a-3b22-4471-a355-5030111af3bc}" FolderPath="Motion\Phasing\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD PhasingRelative 	: itfSynchronizedAxisCommand
VAR_INPUT
//	Master				: itfAxis;
	Master				: Tc2_MC2.AXIS_REF;
	Slave				: Tc2_MC2.AXIS_REF;		
	PhaseShift			: REAL;
	Velocity			: REAL;
	Acceleration		: REAL;
	Deceleration		: REAL;
	Jerk				: REAL;
	BufferMode			: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_PhasingRelative	: Tc2_MC2.MC_PhasingRelative;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_PhasingRelative(
	Master:= Master, 
	Slave:= Slave, 
	Execute:= , 
	ContinuousUpdate:= , 
	PhaseShift:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> , 
	CoveredPhaseShift=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="PositionCorrectionLimiter" Id="{c47c4525-7967-433a-8210-35cacb455ea4}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PositionCorrectionLimiter : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="PositionLag" Id="{9963bbcd-2fe4-4c5f-b604-94d2250dd712}" FolderPath="FeedBack\">
      <Declaration><![CDATA[PROPERTY PositionLag : LREAL]]></Declaration>
      <Get Name="Get" Id="{dfd611bc-3213-4000-a06a-77af682a0779}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[PositionLag := Axis.NcToPlc.PosDiff;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Power" Id="{f479a0c0-c959-4273-841a-a53ca6e59e8b}" FolderPath="Administrative\Axis Functions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD Power 		: itfCommand
VAR_INPUT
	Enable			: BOOL;
	EnablePositive	: BOOL;
	EnableNegative	: BOOL;
END_VAR
VAR
	_fbCommand      : TcCommand;
	itfCommand      : itfCommand;
	Command         : ST_Command;
END_VAR
VAR_INST
	_MC_Power 		: Tc2_MC2.MC_Power;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
itfCommand := _fbCommand;

_MC_Power(
	Axis:= Axis, 
	Enable:= Enable, 
	Enable_Positive:= EnablePositive, 
	Enable_Negative:= EnableNegative, 
	Override:= 100, 
	BufferMode:= , 
	Options:= , 
	Status=> Command.Status, 
	Busy=> Command.Busy,
	Active=> Command.Active,
	Error=> Command.Error,
	ErrorID=> Command.ErrorID_Udint);

itfCommand.Status		:=	Command.Status;
itfCommand.Busy   		:=	Command.Busy;
itfCommand.Active 		:=	Command.Active;
itfCommand.Error 		:=	Command.Error;
itfCommand.ErrorID_Udint :=	Command.ErrorID_Udint;
	
Power := itfCommand;

//_PowerOn := _MC.Power.Enable;
_PowerOn := Command.Active;


]]></ST>
      </Implementation>
    </Method>
    <Property Name="PowerOn" Id="{788c8284-a067-4b73-bd3e-a5329fda0703}" FolderPath="Status\">
      <Declaration><![CDATA[{attribute ‘monitoring’ := ‘call’}
PROPERTY PowerOn : BOOL
]]></Declaration>
      <Get Name="Get" Id="{4debc66c-8c89-4b05-b196-32da99b6b0be}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[PowerOn := _PowerOn;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="PowerStepper" Id="{2c0bcc90-310b-44e7-8e35-ebb6b9652edb}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PowerStepper : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Read_Status" Id="{3db3a851-8870-4021-b37b-f7193e565524}" FolderPath="FeedBack\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD Read_Status
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//update local variables from hardware
Axis.ReadStatus();]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadActualPosition" Id="{56254441-fbde-41a0-8a2e-873cb0ffa0e7}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadActualPosition : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadActualVelocity" Id="{30082ab3-7ba1-4e90-ac2f-4f721cd58c4f}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadActualVelocity : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadApplicationRequest" Id="{26a2d0bd-9d0c-465b-895b-b2d88c815ede}" FolderPath="[Internal]\Beta Functions Blocks\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadApplicationRequest 	: itfCommand
VAR_INPUT
	ApplicationRequest			: Tc2_MC2.ST_NcApplicationRequest;
END_VAR
VAR_INST
	_MC_ReadApplicationRequest	: Tc2_MC2.MC_ReadApplicationRequest;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_MC_ReadApplicationRequest(
	ApplicationRequest:= ApplicationRequest, 
	Axis:= Axis, 
	Execute:= TRUE, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Request=> , 
	RequestType=> );]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadAxisComponents" Id="{b87a57ec-4f89-480c-8817-2da9d3b1f602}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadAxisComponents : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadAxisError" Id="{7351fcfd-ae42-4208-9a94-ab4509d80d64}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadAxisError : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadBoolParameter" Id="{fc75e571-fa59-4330-8562-ad247d6d290f}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD ReadBoolParameter 	: MC_Error
VAR_INPUT
	ParameterNumber			: INT;
END_VAR
VAR_OUTPUT
	Value					: BOOL;
END_VAR
VAR_INST
	_MC_ReadBoolParameter 	: Tc2_MC2.MC_ReadBoolParameter;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_ReadBoolParameter(
	Axis:= Axis, 
	Enable:= TRUE, 
	ParameterNumber:= ParameterNumber, 
	ReadMode:= , 
	Valid=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Value=> Value);


count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadDriveAddress" Id="{54753954-d2bf-4b82-bf77-ed210dc5d990}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadDriveAddress : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadDriveOperationMode" Id="{5b3b7ce3-b335-41d0-9eb3-2dd5b1603462}" FolderPath="Administrative\Extensions\DriveOperationMode\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadDriveOperationMode 	: itfCommand
VAR_INPUT
	Options						: Tc2_MC2.ST_DriveOperationModeOptions;
END_VAR
VAR_INST
	_MC_ReadDriveOperationMode	: Tc2_MC2.MC_ReadDriveOperationMode;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_MC_ReadDriveOperationMode(
	Axis:= Axis, 
	Execute:= TRUE, 
	Options:= Options, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	DriveOperationMode=> );]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadLargeParameter" Id="{dfb6ca3c-bd23-4bd7-804f-b251829346f9}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadLargeParameter : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadParameter" Id="{cddb6be3-68c2-4b4d-9c14-6a1de51eb2c5}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD ReadParameter 	: MC_Error
VAR_INPUT
	ParameterNumber		: INT;
END_VAR
VAR_OUTPUT
	Value				: REAL;
END_VAR
VAR_INST
	_MC_ReadParameter	: Tc2_MC2.MC_ReadParameter;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_ReadParameter(
	Axis:= Axis, 
	Enable:= TRUE, 
	ParameterNumber:= ParameterNumber, 
	ReadMode:= , 
	Valid=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Value=> Value);


count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadParameterSet" Id="{885682a8-0deb-45c8-90d2-c451022a480f}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadParameterSet : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadStatus" Id="{9b3dc2be-985a-46de-b423-370f8f68cb68}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadStatus : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadStopInfo" Id="{9ac89add-5501-4fb1-96f7-d17a38dc4f80}" FolderPath="[Internal]\Beta Functions Blocks\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD ReadStopInfo 	: itfCommand
VAR_INPUT
	Deceleration		: LREAL;
	Jerk				: LREAL;
END_VAR
VAR_INST
	_MC_ReadStopInfo	: Tc2_MC2.MC_ReadStopInfo;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_MC_ReadStopInfo(
	Axis:= Axis, 
	Execute:= TRUE, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	StopDistance=> , 
	StopTime=> );]]></ST>
      </Implementation>
    </Method>
    <Property Name="ReadyForPowerOn" Id="{7edfc666-a58e-4cdd-b6d9-ce309d3dbb55}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY ReadyForPowerOn : BOOL
]]></Declaration>
      <Get Name="Get" Id="{5d7ca864-08a1-4fb9-b227-2975391c3e77}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Reset" Id="{14e50d85-e296-43cf-afd5-3cba42896a29}" FolderPath="Administrative\Axis Functions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD Reset 		: itfCommand
VAR_INST
	_MC_Reset 		: Tc2_MC2.MC_RESET;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_Reset(
	Axis:= Axis, 
	Execute:= TRUE, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );


count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SelectControlLoop" Id="{9e94e21d-dbe1-4204-82bd-aa3f62758985}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD SelectControlLoop : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="Set_Position" Id="{fae400ee-a6d4-4b7b-a05c-64c15b6ea368}" FolderPath="FeedBack\">
      <Declaration><![CDATA[PROPERTY Set_Position : LREAL]]></Declaration>
      <Get Name="Get" Id="{1c9aa515-53ce-407b-bb21-3b5f24c3219a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Set_Position := Axis.NcToPlc.SetPos;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="SetAcceleration" Id="{0f63dc6a-bcf9-40a1-9566-5310ab2f6a32}" FolderPath="FeedBack\">
      <Declaration><![CDATA[PROPERTY SetAcceleration : LREAL]]></Declaration>
      <Get Name="Get" Id="{6a3b7c68-2d3d-42b9-97e6-56ebc968cb14}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[SetAcceleration := Axis.NcToPlc.SetAcc;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SetEncoderScalingFactor" Id="{2f3479cd-a048-451d-8ebc-84f5a650535f}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD SetEncoderScalingFactor : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetOverride" Id="{159befbb-0e58-4754-96a4-765c9befbe12}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD SetOverride 	: MC_Error
VAR_INPUT
	VelFactor		: REAL;
	AccFactor		: REAL;
	JerkFactor		: REAL;
END_VAR
VAR_INST
	_MC_SetOverride : Tc2_MC2.MC_SetOverride;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_SetOverride(
	Axis:= Axis, 
	Enable:= TRUE, 
	VelFactor:= VelFactor, 
	AccFactor:= AccFactor, 
	JerkFactor:= JerkFactor, 
	Enabled=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetPosition" Id="{841fdfbb-6ac2-4c9c-b9c9-a0bf821b2be7}" FolderPath="Administrative\Axis Functions\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD SetPosition 	: itfCommand
VAR_INPUT
	Position		: REAL;
	Relative		: BOOL; (* RELATIVE=True, ABSOLUTE=False (Default)*)
    Options			: Tc2_MC2.ST_SetPositionOptions;
END_VAR
VAR_INST
	_MC_SetPosition : Tc2_MC2.MC_SetPosition;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_SetPosition(
	Axis:= Axis, 
	Execute:= TRUE, 
	Position:= Position, 
	Mode:= Relative, 
	Options:= Options, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );

count_delete  := count_delete + 1;

 ]]></ST>
      </Implementation>
    </Method>
    <Property Name="SetPositionModulo" Id="{68189d6c-5819-453b-bbd7-53231416615a}" FolderPath="FeedBack\">
      <Declaration><![CDATA[PROPERTY SetPositionModulo : LREAL]]></Declaration>
      <Get Name="Get" Id="{3bab5881-e913-4e8c-90d2-5e79705378d0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[SetPositionModulo := Axis.NcToPlc.ModuloSetPos;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="SetVelocity" Id="{6544f9e8-ae6c-4607-992e-117d17910771}" FolderPath="FeedBack\">
      <Declaration><![CDATA[PROPERTY SetVelocity : LREAL]]></Declaration>
      <Get Name="Get" Id="{6969464e-934c-42a1-8fa1-6e2ea3485158}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[SetVelocity := Axis.NcToPlc.SetVelo;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Simulation" Id="{8db6e099-f6ba-4ea8-96dc-469ed58bba45}" FolderPath="Status\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY Simulation : BOOL
]]></Declaration>
      <Get Name="Get" Id="{8573d2f0-d796-44a5-8d11-4f09bec709b2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[count_delete  := count_delete + 1;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SinusOscillation" Id="{c5323034-291d-4fa7-969f-a18e6034b40e}" FolderPath="[Internal]\Beta Functions Blocks\Sinus Motion\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD SinusOscillation 	: itfCommand
VAR_INPUT
	VeloAmplitude			: LREAL;
	Frequency				: LREAL;
	DrivingTime				: TIME;
END_VAR
VAR_INST
	_MC_SinusOscillation 	: Tc2_MC2.MC_SinusOscillation;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_MC_SinusOscillation(
	Axis:= Axis, 
	Execute:= TRUE, 
	VeloAmplitude:= VeloAmplitude, 
	Frequency:= Frequency, 
	DrivingTime:= DrivingTime, 
	Busy=> , 
	Active=> , 
	Done=> , 
	Error=> , 
	ErrorID=> );]]></ST>
      </Implementation>
    </Method>
    <Method Name="SinusSequence" Id="{c54e85b8-3f78-47ec-a940-9d2f999b5d48}" FolderPath="[Internal]\Beta Functions Blocks\Sinus Motion\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD SinusSequence 	: itfCommand
VAR_INPUT
	StartFrequency		: LREAL;
	StopFrequency		: LREAL;
	BaseFrequency		: LREAL;
	FrequencySteps      : UINT;
	SinusBaseVelocity   : LREAL;
	StepDuration        : TIME;
	FeedConstantMotor   : LREAL;
END_VAR
VAR_INST
	_MC_SinusSequence	: Tc2_MC2.MC_SinusSequence;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_SinusSequence(
	Axis:= Axis, 
	Execute:= TRUE, 
	StartFrequency:= StartFrequency, 
	StopFrequency:= StopFrequency, 
	BaseFrequency:= BaseFrequency, 
	FrequencySteps:= FrequencySteps, 
	SinusBaseVelocity:= SinusBaseVelocity, 
	StepDuration:= StepDuration, 
	FeedConstantMotor:= FeedConstantMotor, 
	Busy=> , 
	Active=> , 
	Done=> , 
	Error=> , 
	ErrorID=> );]]></ST>
      </Implementation>
    </Method>
    <Property Name="Status" Id="{899ae5c5-cb0d-4a4d-9f83-26636f1764e2}" FolderPath="Status\">
      <Declaration><![CDATA[{attribute ‘monitoring’ := ‘call’}
PROPERTY Status : Tc2_MC2.MC_AxisStates
]]></Declaration>
      <Get Name="Get" Id="{d011a0b2-92b3-4928-b561-f5a955384b13}">
        <Declaration><![CDATA[VAR	
	AxisStates : Tc2_MC2.MC_AxisStates;
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[
//CASE Axis.Status.MotionState OF 
//     MC_AXISSTATE_UNDEFINED : 
//         AxisStates := MC_AxisStates.MC_AXISSTATE_UNDEFINED;
//	MC_AXISSTATE_DISABLED:
//		AxisStates := MC_AxisStates.MC_AXISSTATE_DISABLED;
//	MC_AXISSTATE_STANDSTILL:
//		AxisStates := MC_AxisStates.MC_AXISSTATE_STANDSTILL;
//	MC_AXISSTATE_ERRORSTOP:		
//		AxisStates := MC_AxisStates.MC_AXISSTATE_ERRORSTOP;
//	MC_AXISSTATE_STOPPING:			
//		AxisStates := MC_AxisStates.MC_AXISSTATE_STOPPING;
//	MC_AXISSTATE_HOMING:			
//		AxisStates := MC_AxisStates.MC_AXISSTATE_HOMING;
//	MC_AXISSTATE_DISCRETEMOTION:			
//		AxisStates := MC_AxisStates.MC_AXISSTATE_DISCRETEMOTION;
//	MC_AXISSTATE_CONTINOUSMOTION:			
//		AxisStates := MC_AxisStates.MC_AXISSTATE_CONTINOUSMOTION;
//	MC_AXISSTATE_SYNCHRONIZEDMOTION:			
//		AxisStates := MC_AxisStates.MC_AXISSTATE_SYNCHRONIZEDMOTION;
//END_CASE;

//Status := AxisStates;

Status := Axis.Status.MotionState;

]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Stop" Id="{c7df0714-0c83-44e1-9182-81c8a840aa7d}" FolderPath="Motion\Point To Point Motion\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD Stop 		: itfAxisCommand
VAR_INPUT
	Deceleration	: REAL;
	Jerk			: REAL;
END_VAR
VAR_INST
	_MC_Stop		: Tc2_MC2.MC_STOP;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_Stop(
	Axis:= Axis, 
	Execute:= TRUE, 
	Deceleration:= Deceleration, 
	Jerk:= Jerk, 
	Options:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TableBasedPositionCompensation" Id="{85f274d5-a90d-45c2-982f-c5b5ced034db}" FolderPath="[Internal]\Beta Functions Blocks\Position Correction\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD TableBasedPositionCompensation 	: itfCommand
VAR_INPUT
	pTable 								: POINTER TO Tc2_MC2.ST_PositionCompensationTableElement;
	TableSize							: UDINT;
	TableParameter						: Tc2_MC2.ST_PositionCompensationTableParameter;
	Ramp								: LREAL;
	DisableMode							: Tc2_MC2.E_DisableMode;
	Options								: Tc2_MC2.ST_PositionCompensationOptions;
END_VAR
VAR_INST
	_MC_TableBasedPositionCompensation	: Tc2_MC2.MC_TableBasedPositionCompensation;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_TableBasedPositionCompensation(
	Axis:= Axis, 
	Enable:= TRUE, 
	pTable:= pTable, 
	TableSize:= TableSize, 
	TableParameter:= TableParameter, 
	Ramp:= Ramp, 
	DisableMode:= DisableMode, 
	Options:= Options, 
	Enabled=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	CurrentCorrection=> , 
	Limiting=> );]]></ST>
      </Implementation>
    </Method>
    <Method Name="TorqueControl" Id="{6e3ef885-3d26-42b8-9949-5a5da1bc6ad2}" FolderPath="Motion\Torque Control\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD TorqueControl 	: itfAxisCommand
VAR_INPUT
	Torque				: REAL;
	TorqueRamp			: REAL;
	Velocity			: REAL;
	Acceleration		: REAL;
	Deceleration		: REAL;
	Jerk				: REAL;
	Direction			: MC_DIRECTION;
	BufferMode			: MC_BUFFER_MODE;
END_VAR
VAR_INST
	_MC_TorqueControl	: Tc2_MC2.MC_TorqueControl;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_TorqueControl(
	Axis:= Axis, 
	Execute:= , 
	ContinuousUpdate:= , 
	Relative:= , 
	Torque:= Torque, 
	TorqueRamp:= TorqueRamp, 
	VelocityLimitHigh:= , 
	VelocityLimitLow:= , 
	BufferMode:= , 
	Options:= , 
	InTorque=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorId=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TouchProbe" Id="{9724a4d0-7f15-4489-9615-ca6b57fe446e}" FolderPath="Administrative\Touch Probe\">
      <Declaration><![CDATA[METHOD TouchProbe : itfCommand
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteBoolParameter" Id="{3378c903-7622-4419-977d-9abca44ccb6f}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD WriteBoolParameter 	: MC_Error
VAR_INPUT
	ParameterNumber			: INT;
	Value					: BOOL;
END_VAR
VAR
	
END_VAR
VAR_INST
	_MC_WriteBoolParameter	: Tc2_MC2.MC_WriteBoolParameter;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_WriteBoolParameter(
	Axis:= Axis, 
	Execute:= TRUE, 
	ParameterNumber:= ParameterNumber, 
	Value:= Value, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteBoolParameterPersistent" Id="{5ac463f5-0186-4f64-bd79-1f726926d5fe}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD WriteBoolParameterPersistent : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteDriveOperationMode" Id="{ecddd624-f4e5-4b0c-a818-a26b52aeee6c}" FolderPath="Administrative\Extensions\DriveOperationMode\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD WriteDriveOperationMode 	: itfCommand
VAR_INPUT
	DriveOperationMode			: Tc2_MC2.E_DriveOperationMode;
	Options						: Tc2_MC2.ST_DriveOperationModeOptions;
END_VAR
VAR_INST
	_MC_WriteDriveOperationMode	: Tc2_MC2.MC_WriteDriveOperationMode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_WriteDriveOperationMode(
	Axis:= Axis, 
	Execute:= TRUE, 
	DriveOperationMode:= DriveOperationMode, 
	Options:= Options, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteLargeParameter" Id="{e96912b6-ade0-4f87-a5bd-4de978db261a}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD WriteLargeParameter : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteLargeParameterPersistent" Id="{b94c43d1-35e5-484a-866a-1646886c4ba0}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD WriteLargeParameterPersistent : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteNcIoOutput" Id="{c6d98faf-724c-4edd-b7aa-a565dbef8b92}" FolderPath="Administrative\Extensions\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD WriteNcIoOutput : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteParameter" Id="{45c39499-1570-46c6-aa44-5d04439c023a}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD WriteParameter 	: MC_Error
VAR_INPUT
	ParameterNumber		: INT;
	Value				: REAL;
END_VAR

VAR_INST
	_MC_WriteParameter 	: Tc2_MC2.MC_WriteParameter;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
_MC_WriteParameter(
	Axis:= Axis, 
	Execute:= TRUE, 
	ParameterNumber:= ParameterNumber, 
	Value:= Value, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> );

count_delete  := count_delete + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteParameterPersistent" Id="{bb9d6a05-6f00-4681-8e52-b1d586a0e210}" FolderPath="Administrative\Status and Parameter\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD WriteParameterPersistent : MC_Error
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>